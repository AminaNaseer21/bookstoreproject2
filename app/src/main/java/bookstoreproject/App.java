/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package bookstoreproject;

import java.util.ArrayList;

import bookstoreproject.inventory.*;
import bookstoreproject.sales.*;
import bookstoreproject.io.*;
import bookstoreproject.product.ProductInfo;

public class App {
    public String makeAnnouncement() {
        return "Starting Project";
    }

    public static void main(String[] args) {
        System.out.println(new App().makeAnnouncement());
        // Initialize the Inventory and Sales classes
        InventoryMgnt inventory_mgnt = new InventoryMgnt();
        InventoryItem bookItem = InventoryItem.createInventoryItem(inventory_mgnt,"Book", 20, 14.0);
        InventoryItem penItem = InventoryItem.createInventoryItem(inventory_mgnt,"Pen", 20, 2.0);
        InventoryItem pencilItem = InventoryItem.createInventoryItem(inventory_mgnt,"Pencil", 20, 1.0);
        InventoryItem stationaryItem = InventoryItem.createInventoryItem(inventory_mgnt,"Stationary", 20, 4.0);

        ArrayList<ItemEntry> entries = ItemEntry.readEntriesFromFile("inventory_items.txt");
            
        for(ItemEntry entry : entries) {
            System.out.println("Product: " + entry.getProduct());
            System.out.println("Quantity: " + entry.getQuantity());
            System.out.println("Price: " + entry.getPrice());
            System.out.println("-----------------------");
        }
    
        Sales sales = new Sales(inventory_mgnt);

          // Header
          System.out.printf("%-15s %-15s %-15s%n", "Product", "Availability", "Price");

          // Display initial inventory and pricing for demonstration
          System.out.printf("%-15s %-15s %-15.2f%n", "Books", inventory_mgnt.isAvailable(bookItem, 1), bookItem.getPricingInfo().getPrice());
          System.out.printf("%-15s %-15s %-15.2f%n", "Stationary", inventory_mgnt.isAvailable(stationaryItem, 1), stationaryItem.getPricingInfo().getPrice());
          System.out.printf("%-15s %-15s %-15.2f%n", "Pencils", inventory_mgnt.isAvailable(pencilItem, 1), pencilItem.getPricingInfo().getPrice());
          System.out.printf("%-15s %-15s %-15.2f%n", "Pens", inventory_mgnt.isAvailable(penItem, 1), penItem.getPricingInfo().getPrice());
        /* 
          // Perform some sales transactions and show results
          System.out.println("\nSales Transactions:");
          boolean bookSale = sales.makeSale(bookItem, 2);
          System.out.printf("Sold 2 Books: %-5s%n", bookSale);
  
          boolean pencilSale = sales.makeSale(pencilItem, 5);
          System.out.printf("Sold 5 Pencils: %-5s%n", pencilSale);
  
          boolean stationarySale = sales.makeSale(stationaryItem, 3);
          System.out.printf("Sold 3 Stationary items: %-5s%n", stationarySale);
        */
        String[] productsToSell = {"Book", "Pencil", "Stationary", "Item From inventory_items.txt", "NonExistentItem"};
        int[] quantitiesToSell = {2, 5, 3, 1, 1};  // Quantities for each product

        for(int i = 0; i < productsToSell.length; i++) {
            String product = productsToSell[i];
            int quantity = quantitiesToSell[i];

            try {
                ProductInfo productInfo = productInfoMap.get(product);
                if(productInfo == null) {
                    throw new IllegalArgumentException("The product " + product + " does not exist in the inventory.");
                }
                InventoryItem inventoryItem = inventory_mgnt.getItem(productInfo);
                boolean saleResult = sales.makeSale(inventoryItem, quantity);
                System.out.printf("Sold %d %s: %-5s%n", quantity, product, saleResult);
            } catch (Exception e) {
                System.out.println("Error processing sale for " + product + ": " + e.getMessage());
            }
        }

          // Display class name using Reflection for demonstration
          System.out.printf("\nClass of Sales object: %s%n", sales.getClass().getSimpleName());
  
          // If there's a static SalesCounter class to track total sales
          // System.out.printf("Total Sales: %d%n", SalesCounter.totalSales);
  
          // Exit the program
          System.out.println("\nExiting the program.");
    }
}
